spring.application.name=api-gateway
server.port=8765
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
#spring.cloud.gateway.discovery.locator.enabled=true
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Tell Eureka to use localhost instead of the actual hostname
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${server.port}

spring.cloud.gateway.routes[0].id=course-service
spring.cloud.gateway.routes[0].uri=lb://course-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/course-service/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[1].id=question-service
spring.cloud.gateway.routes[1].uri=lb://question-service
#spring.cloud.gateway.routes[1].uri=http://localhost:8081
spring.cloud.gateway.routes[1].predicates[0]=Path=/question-service/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[2].id=user-service
spring.cloud.gateway.routes[2].uri=lb://user-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/user-service/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=1

#Okta configuration for api gateway
okta.oauth2.issuer=https://dev-44118636.okta.com/oauth2/default
okta.oauth2.audience=api://default
okta.oauth2.client-id=0oapdvjfoeeXewiHK5d7
okta.oauth2.client-secret=KFmTfRc49XQAguSXvm0593_rMvRrl37HULW0ozQeYAqadhYm7syMY3RiRX3__Qoj
okta.oauth2.scopes=openid, profile, email, offline_access
#spring.security.oauth2.client.registration.okta.redirect-uri=http://localhost:8765/login/oauth2/code/okta
#spring.security.oauth2.client.registration.okta.client-name=Okta

#spring.security.oauth2.client.provider.okta.issuer-uri=https://dev-44118636.okta.com/oauth2/default

